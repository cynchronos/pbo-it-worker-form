/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pbo_responsi_5210411399;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class ITWorkerForm extends javax.swing.JFrame {

    /**
     * Creates new form ITWorkerForm
     */
    private Connection db;

    private DefaultTableModel model;

  

    public ITWorkerForm() {
        initComponents();

        initKomponenTambahan();
    }

    private void initKomponenTambahan() {

        // Buat txtGaji tak dapat diedit
        txtGaji.setEditable(false);
        txtGaji.setText("15.000.000");

        // Atur gaji berdasarkan posisi
        cmbPosisi.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                switch (e.getItem().toString()) {
                    case "Senior Programmer":
                        txtGaji.setText("15.000.000");
                        break;
                    case "Bussiness Analyst":
                        txtGaji.setText("21.000.000");
                        break;
                    case "Data Center Office":
                        txtGaji.setText("18.000.000");
                        break;
                    default:
                        txtGaji.setText("8.000.000");
                }
            }

        });

        // TODO: ADD model tabel Mahasiswa
        model = (DefaultTableModel) tabelPegawai.getModel();

        // TODO: LOAD data dari database
        this.loadDataToTabel();
    }

    private void loadDataToTabel() {
        model.setRowCount(0);

        try {
            db = KoneksiDB.getKoneksi();
            Statement st = db.createStatement();

            String sql = "SELECT * FROM data_pegawai";

            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] data = new Object[4];
                data[0] = rs.getString("nama_pgw");
                data[1] = rs.getString("no_pgw");
                data[2] = rs.getString("posisi_pgw");
                data[3] = rs.getString("gaji_pgw");

                model.addRow(data);
            }

            rs.close();
            st.close();
        } catch (SQLException e) {
            System.err.println("Load data eror: " + e.getMessage());
        }
    }

    private void checkAll() throws FieldNamaKosongException, FieldNoPegawaiKosongException, NoPegawaiHarus10Digit, NoPegawaiBukanAngka, NoPegawaiHarusPositif, DuplikasiNoPegawaiException {
        String nama_pgw = txtNama.getText();
        String no_pgw = txtNoPegawai.getText();

        if (nama_pgw.isBlank()) {
            throw new FieldNamaKosongException();
        }

        if (no_pgw.isBlank()) {
            throw new FieldNoPegawaiKosongException();
        }

        try {

            long no_pgwlong = Long.parseLong(no_pgw);

            if (no_pgw.length() != 10) {
                throw new NoPegawaiHarus10Digit();
            }

            if (no_pgwlong < 0) {
                throw new NoPegawaiHarusPositif();
            }

        } catch (NumberFormatException e) {
            throw new NoPegawaiBukanAngka();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        txtNoPegawai = new javax.swing.JTextField();
        txtGaji = new javax.swing.JTextField();
        cmbPosisi = new javax.swing.JComboBox<>();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPegawai = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 700));

        header.setFont(new java.awt.Font("Cantarell Extra Bold", 1, 36)); // NOI18N
        header.setText("IT Worker Form");

        btnExit.setBackground(new java.awt.Color(204, 204, 204));
        btnExit.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel1.setText("Nama");

        jLabel3.setText("No. Pegawai");

        jLabel4.setText("Posisi");

        jLabel5.setText("Gaji");

        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });

        txtNoPegawai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoPegawaiActionPerformed(evt);
            }
        });

        txtGaji.setBackground(new java.awt.Color(204, 204, 204));
        txtGaji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGajiActionPerformed(evt);
            }
        });

        cmbPosisi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Senior Programmer", "Bussiness Analyst", "Data Center Office", "Junior Programmer" }));

        btnInsert.setBackground(new java.awt.Color(204, 204, 204));
        btnInsert.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(204, 204, 204));
        btnUpdate.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tabelPegawai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Pegawai", "No. Pegawai", "Posisi", "Gaji"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelPegawai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPegawaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelPegawai);

        btnDelete.setBackground(new java.awt.Color(204, 204, 204));
        btnDelete.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNoPegawai, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                                    .addComponent(txtGaji, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                                    .addComponent(cmbPosisi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 299, Short.MAX_VALUE))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNoPegawai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbPosisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtGaji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void txtNoPegawaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoPegawaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoPegawaiActionPerformed

    private void txtGajiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGajiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGajiActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        try {

            db = KoneksiDB.getKoneksi();

            this.checkAll();

            String query = "SELECT * FROM data_pegawai WHERE no_pgw = ?";

            PreparedStatement psq = db.prepareStatement(query);

            psq.setString(1, txtNoPegawai.getText());

            ResultSet rs = psq.executeQuery();

            if (rs.next()) {
                throw new DuplikasiNoPegawaiException();
            }

            String sql = "INSERT INTO data_pegawai "
                    + "(nama_pgw,no_pgw,posisi_pgw,gaji_pgw) "
                    + "VALUES (?,?,?,?)";

            PreparedStatement ps = db.prepareStatement(sql);

            ps.setString(1, txtNama.getText());
            ps.setString(2, txtNoPegawai.getText());
            ps.setString(3, cmbPosisi.getSelectedItem().toString());
            ps.setString(4, txtGaji.getText());

            int rowInsert = ps.executeUpdate();
            if (rowInsert > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan", "Success", JOptionPane.INFORMATION_MESSAGE);
            }

            ps.close();
        } catch (FieldNamaKosongException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (FieldNoPegawaiKosongException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (NoPegawaiBukanAngka e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (NoPegawaiHarus10Digit e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (NoPegawaiHarusPositif e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (DuplikasiNoPegawaiException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (SQLException e) {
            System.err.println("Insert data eror: " + e.getMessage());
        } finally {
            // Load tabel pegawai untuk melihat perubahan
            this.loadDataToTabel();
        }

    }//GEN-LAST:event_btnInsertActionPerformed

    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            this.checkAll();

            db = KoneksiDB.getKoneksi();

            String sql = "UPDATE data_pegawai "
                    + "SET nama_pgw=?, no_pgw=?, posisi_pgw=?, gaji_pgw=? "
                    + "WHERE no_pgw=?;";

            PreparedStatement ps = db.prepareStatement(sql);

            ps.setString(1, txtNama.getText());
            ps.setString(2, txtNoPegawai.getText());
            ps.setString(3, cmbPosisi.getSelectedItem().toString());
            ps.setString(4, txtGaji.getText());
            ps.setString(5, txtNoPegawai.getText());

            int rowInsert = ps.executeUpdate();
            if (rowInsert > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil diupdate", "Success", JOptionPane.INFORMATION_MESSAGE);
            }

            ps.close();
        } catch (FieldNamaKosongException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (FieldNoPegawaiKosongException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (NoPegawaiBukanAngka e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (NoPegawaiHarus10Digit e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (DuplikasiNoPegawaiException e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (NoPegawaiHarusPositif e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        } catch (SQLException e) {
            System.err.println("Update data eror: " + e.getMessage());
        } finally {
            // Load tabel pegawai untuk melihat perubahan
            this.loadDataToTabel();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            db = KoneksiDB.getKoneksi();

            String sql = "DELETE FROM data_pegawai "
                    + "WHERE no_pgw=?;";

            PreparedStatement ps = db.prepareStatement(sql);

            ps.setString(1, txtNoPegawai.getText());

            int aksi = JOptionPane.showConfirmDialog(rootPane, "Anda Yakin", "Konfirmasi", JOptionPane.YES_NO_OPTION);

            if (aksi == JOptionPane.YES_OPTION) {
                int rowInsert = ps.executeUpdate();
                if (rowInsert > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            }

            ps.close();
        } catch (SQLException e) {
            System.err.println("Delete data eror: " + e.getMessage());
        } finally {
            // Load tabel pegawai untuk melihat perubahan
            this.loadDataToTabel();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tabelPegawaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPegawaiMouseClicked
        // TODO: ADD baris data terpilih ke form
        int rowIdx = tabelPegawai.getSelectedRow();

        // Tampilkan data ke form
        String nama = tabelPegawai.getValueAt(rowIdx, 0).toString();
        txtNama.setText(nama);

        String no_pgw = tabelPegawai.getValueAt(rowIdx, 1).toString();
        txtNoPegawai.setText(no_pgw);

        String posisi = tabelPegawai.getValueAt(rowIdx, 2).toString();
        cmbPosisi.setSelectedItem(posisi);

        String gaji = tabelPegawai.getValueAt(rowIdx, 3).toString();
        txtGaji.setText(gaji);
    }//GEN-LAST:event_tabelPegawaiMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ITWorkerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ITWorkerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ITWorkerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ITWorkerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ITWorkerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbPosisi;
    private javax.swing.JLabel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tabelPegawai;
    private javax.swing.JTextField txtGaji;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNoPegawai;
    // End of variables declaration//GEN-END:variables
}
